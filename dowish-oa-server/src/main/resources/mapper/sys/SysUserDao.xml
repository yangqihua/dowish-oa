<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.dowish.modules.sys.dao.UserDao">
    <select id="queryObject" resultType="net.dowish.modules.sys.entity.UserEntity">
		select * from sys_user where user_id = #{value}
	</select>

    <select id="queryList" resultType="net.dowish.modules.sys.entity.UserEntity">
        SELECT u.*, d.name deptName FROM sys_user u LEFT JOIN sys_dept d ON d.dept_id = u.dept_id WHERE 1=1
        <if test="username != null and username.trim() != ''">
            and u.`username` like concat('%',#{username},'%')
        </if>
        <if test="email != null and email.trim() != ''">
            and u.`email` like concat('%',#{email},'%')
        </if>
        <if test="mobile != null and mobile.trim() != ''">
            and u.`mobile` like concat('%',#{mobile},'%')
        </if>
        <if test="deptName != null and deptName.trim() != ''">
            and d.`name` like concat('%',#{deptName},'%')
        </if>
        <if test="status != null and status.trim() != ''">
            and u.`status` = #{status}
        </if>
        ${sqlFilter}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by u.${sidx} ${order}
            </when>
            <otherwise>
                order by u.user_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from sys_user
        <where>
            <if test="username != null and username.trim() != ''">
                and `username` like concat('%',#{username},'%')
            </if>
        </where>
    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId}
	</select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

    <select id="queryByUserName" resultType="net.dowish.modules.sys.entity.UserEntity">
		select * from sys_user where username = #{username}
	</select>

    <insert id="save" parameterType="net.dowish.modules.sys.entity.UserEntity" useGeneratedKeys="true"
            keyProperty="userId">
		insert into sys_user
		(
		`user_id`,
		`username`,
		`password`,
		`salt`,
		`email`,
		`mobile`,
		`status`,
		`dept_id`,
		`create_time`,
		`create_user_id`
		)
		values
		(
		#{userId},
		#{username},
		#{password},
		#{salt},
		#{email},
		#{mobile},
		#{status},
		#{deptId},
		#{createTime},
		#{createUserId}
		)
	</insert>

    <update id="update" parameterType="net.dowish.modules.sys.entity.UserEntity">
        update sys_user
        <set>
            <if test="username != null">`username` = #{username},</if>
            <if test="password != null">`password` = #{password},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="mobile != null">`mobile` = #{mobile},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="deptId != null">`dept_id` = #{deptId},</if>
        </set>
        where user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>

    <delete id="deleteBatch">
        delete from sys_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from sys_user_role where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>